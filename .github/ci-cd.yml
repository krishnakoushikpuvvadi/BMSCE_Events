# name: Node.js CI

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: macos-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Setup Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: 14

#       - name: Install dependencies
#         run: npm install

#       - name: Run tests
#         run: npm test

#   - name: Cache Node.js modules
#   uses: actions/cache@v2
#   with:
#     path: ~/.npm
#     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#     restore-keys: |
#       ${{ runner.os }}-node-

# - name: Set environment variables
#   run: |
#     echo "NODE_ENV=production" >> $GITHUB_ENV
#     echo "API_KEY=${{ secrets.API_KEY }}" >> $GITHUB_ENV

# - name: Publish Artifacts
#   uses: actions/upload-artifact@v2
#   with:
#     name: my-app-artifact
#     path: path/to/artifacts

# - name: Build and Deploy
#   run: |
#     npm run build
#     npm run deploy
#   env:
#     CI: true


# name: Node.js CI on macOS

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: macos-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Setup Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: 14

#       - name: Install dependencies
#         run: npm install

#       - name: Run tests
#         run: npm test

# The name of the workflow. GitHub displays the names of your workflows under your repository's "Actions" tab. If you omit `name`, GitHub displays the workflow file path relative to the root of the repository.
name: Node.js CI

# This example workflow assumes that the default branch for your repository is `main`. If the default branch has a different name, edit this example and add your repository's default branch.
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

#
jobs:
  build:

    # <!-- This is a YAML comment for use in annotated code examples. -->
# You can run this workflow using a different operating systems.
#
# The starter workflow configures jobs to run on Linux, using the GitHub-hosted `ubuntu-latest` runners. You can change the `runs-on` key to run your jobs on a different operating system.
#
# For example, you can use the GitHub-hosted Windows runners by specifying `runs-on: windows-latest`. Or, you can run on the GitHub-hosted macOS runners using `runs-on: macos-latest`.
#
# You can also run jobs in Docker containers, or you can provide a self-hosted runner that runs on your own infrastructure. For more information, see "[AUTOTITLE](/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idruns-on)."
    runs-on: macos-latest

    # This job uses a matrix strategy to run the job four times, once for each specified Node version. For more information, see "[AUTOTITLE](/actions/using-jobs/using-a-matrix-for-your-jobs)."
    strategy:
      matrix:
        node-version: [14.x]
#
    steps:
      # This step uses the `actions/checkout` action to download a copy of your repository on the runner.
      - uses: actions/checkout@v3
      # This step uses the `actions/setup-node` action to set up Node.js for each version indicated by the `matrix.node-version` key above.
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      # This step runs `npm ci` to install any dependencies listed in your `package.json` file.
      - run: npm ci
      # This step runs the `build` script if there is one specified under the `scripts` key in your `package.json` file.
      - run: npm run build --if-present
      # This step runs the `test` script that is specified under the `scripts` key in your `package.json` file.
      - run: npm test
